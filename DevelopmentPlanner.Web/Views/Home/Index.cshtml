@using DevelopmentPlanner.Web.Models;

@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div class="col-md-12">

        <div id="chart"></div>

        <div id="grid2"></div>


        @*<div id="grid"></div>*@




        <div id="pivotgrid-demo">

        </div>

    </div>
</div>


<script>

    $(function () {

        var uri = "/api/tickets";
        $('#grid2').dxDataGrid({
            dataSource: DevExpress.data.AspNet.createStore({
                key: 'id',
                loadUrl: uri
            }),
            remoteOperations: true,
            columns: [
                { dataField: 'ticketNumber', caption: 'Ticket' },
                { dataField: 'title', caption: 'Title' },
                { dataField: 'type', caption: 'Type' },
                { dataField: 'status', caption: 'Status' },
                {
                    caption: 'Dates', 
                    columns: [
                        { dataField: 'startDate', caption: 'Start Date', dataType: 'date' },
                        { dataField: 'dueDate', caption: 'Due Date', dataType: 'date' },
                    ]
                },
                { dataField: 'priority', caption: 'Priority' },
                { dataField: 'estHours', caption: 'Estimate Hours' },
                { dataField: 'year', caption: 'Year' },
                { dataField: 'quarter', caption: 'Quarter' },
            ],
            wordWrapEnabled: true, 
            allowColumnResizing: true,
            columnResizingMode: "widget",
            columnAutoWidth: true,
            columnChooser: {
                enabled: true
            },
            stateStoring: {
                enabled: true,
                type: "localStorage",
                storageKey: "gridFilterStorage"
            },
            filterRow: {
                visible: true
            },
            headerFilter: {
                visible: true
            },
            groupPanel: {
                visible: true
            },
            scrolling: {
                mode: "virtual"
            },
            height: 600,
            showBorders: true,
            sortByGroupSummaryInfo: [{
                summaryItem: "count"
            }],
            summary: {
                totalItems: [
                    {
                        column: "ticketNumber",
                        displayFormat: '{0} Total Tickets',
                        summaryType: 'count', 
                        showInGroupFooter: true,
                        showInColumn: 'ticketNumber'
                    }, 
                    {
                        column: "estHours",
                        displayFormat: 'Estimated Hours {0}',
                        summaryType: "sum", 
                        showInGroupFooter: true
                    }
                ],
                groupItems: [
                    {
                        summaryType: "count",
                        displayFormat: '{0} Tickets',
                    },
                    {
                        column: "estHours",
                        displayFormat: '{0} Estimated Hours',
                        summaryType: "sum", 
                        alignByColumn: false
                    },
                    
                ]
            }
        })

        var fruits = [
            { fruit: 'Oranges', yield: 10, consumed: 7 },
            { fruit: 'Apples', yield: 15, consumed: 14 },
            { fruit: 'Bananas', yield: 9, consumed: 9 }
        ];
        $(function () {
            $("#chart").dxChart({
                dataSource: fruits,
                commonSeriesSettings: {
                    argumentField: "fruit",
                    type: "bar"
                },
                series: [
                    { valueField: "yield" },
                    { valueField: "consumed" }
                ]
            });
        });

        //$("#chart").dxChart({
        //    dataSource: uri,
        //    series: {
        //        argumentField: "year",
        //        valueField: "oranges",
        //        name: "My oranges",
        //        type: "bar",
        //        color: '#ffaa66'
        //    }
        //});

        //$("#chart").dxPieChart({
        //    size: {
        //        width: 500
        //    },
        //    palette: "bright",
        //    dataSource: uri,
        //    series: [
        //        {
        //            argumentField: "year",
        //            valueField: "quarter",
        //            label: {
        //                visible: true,
        //                connector: {
        //                    visible: true,
        //                    width: 1
        //                }
        //            }
        //        }
        //    ],
        //    title: "Area of Countries",
        //    //"export": {
        //    //    enabled: true
        //    //},
        //    //onPointClick: function (e) {
        //    //    var point = e.target;

        //    //    toggleVisibility(point);
        //    //},
        //    //onLegendClick: function (e) {
        //    //    var arg = e.target;

        //    //    toggleVisibility(this.getAllSeries()[0].getPointsByArg(arg)[0]);
        //    //}
        //});




        var url = "https://js.devexpress.com/Demos/Mvc/api/DataGridWebApi";
        $("#grid").dxDataGrid({
            dataSource: DevExpress.data.AspNet.createStore({
                key: "OrderID",
                loadUrl: url + "/Orders",
                insertUrl: url + "/InsertOrder",
                updateUrl: url + "/UpdateOrder",
                deleteUrl: url + "/DeleteOrder",
                onBeforeSend: function (method, ajaxOptions) {
                    ajaxOptions.xhrFields = { withCredentials: true };
                }
            }),
            remoteOperations: true,
            columns: [{
                dataField: "CustomerID",
                caption: "Customer",
                validationRules: [{
                    type: "stringLength",
                    message: "The field Customer must be a string with a maximum length of 5.",
                    max: 5
                }],
                lookup: {
                    dataSource: DevExpress.data.AspNet.createStore({
                        key: "Value",
                        loadUrl: url + "/CustomersLookup",
                        onBeforeSend: function (method, ajaxOptions) {
                            ajaxOptions.xhrFields = { withCredentials: true };
                        }
                    }),
                    valueExpr: "Value",
                    displayExpr: "Text"
                }
            }, {
                dataField: "OrderDate",
                dataType: "date",
                validationRules: [{
                    type: "required",
                    message: "The OrderDate field is required."
                }]
            }, {
                dataField: "Freight",
                headerFilter: {
                    groupInterval: 100
                },
                validationRules: [{
                    type: "range",
                    message: "The field Freight must be between 0 and 2000.",
                    min: 0,
                    max: 2000
                }]
            }, {
                dataField: "ShipCountry",
                validationRules: [{
                    type: "stringLength",
                    message: "The field ShipCountry must be a string with a maximum length of 15.",
                    max: 15
                }]
            }, {
                dataField: "ShipVia",
                caption: "Shipping Company",
                dataType: "number",
                lookup: {
                    dataSource: DevExpress.data.AspNet.createStore({
                        key: "Value",
                        loadUrl: url + "/ShippersLookup",
                        onBeforeSend: function (method, ajaxOptions) {
                            ajaxOptions.xhrFields = { withCredentials: true };
                        }
                    }),
                    valueExpr: "Value",
                    displayExpr: "Text"
                }
            }
            ],
            filterRow: {
                visible: true
            },
            headerFilter: {
                visible: true
            },
            groupPanel: {
                visible: true
            },
            scrolling: {
                mode: "virtual"
            },
            height: 600,
            showBorders: true,
            masterDetail: {
                enabled: true,
                template: function (container, options) {
                    $("<div>")
                        .dxDataGrid({
                            dataSource: DevExpress.data.AspNet.createStore({
                                loadUrl: url + "/OrderDetails",
                                loadParams: { orderID: options.data.OrderID },
                                onBeforeSend: function (method, ajaxOptions) {
                                    ajaxOptions.xhrFields = { withCredentials: true };
                                }
                            }),
                            showBorders: true
                        }).appendTo(container);
                }
            },
            editing: {
                allowAdding: true,
                allowUpdating: true,
                allowDeleting: true
            },
            grouping: {
                autoExpandAll: false
            },
            summary: {
                totalItems: [{
                    column: "Freight",
                    summaryType: "sum"
                }],
                groupItems: [{
                    column: "Freight",
                    summaryType: "sum"
                }, {
                    summaryType: "count"
                }
                ]
            }
        });
    });

    function customize_tooltip(args) {
        return {
            html: args.seriesName + " | Total<div class='currency'>" + args.valueText + "</div>"
        };
    }

    function bind_chart(e) {
        console.log('bind_chart');
        e.component.bindChart($("#pivotgrid-chart"), {
            dataFieldsDisplayMode: "splitPanes",
            alternateDataFields: false
        });
        expand(e.component.getDataSource());
    }

    function expand(dataSource) {
        setTimeout(function () {
            dataSource.expandHeaderItem("row", ["North America"]);
            dataSource.expandHeaderItem("column", [2013]);
        }, 0);
    }
</script>
